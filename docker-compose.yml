# version: '3.8'

# services:
#   frontend:
#     image: frontend_image:latest
#     build:
#       context: ./frontend
#       dockerfile: Dockerfile
#     ports:
#       - "3000:3000"
#     env_file:
#       - ./frontend/.env
#     depends_on:
#       - nginx
#     deploy:
#       replicas: 2

#   backend:
#     image: backend_image:latest
#     build:
#       context: ./backend
#       dockerfile: Dockerfile
#     ports:
#       - "8000:8000"
#     env_file:
#       - ./backend/.env
#     depends_on:
#       - redis
#     deploy:
#       replicas: 2

#   nginx:
#     image: nginx:alpine
#     ports:
#       - "80:80"
#     volumes:
#       - ./nginx.conf:/etc/nginx/nginx.conf
#     depends_on:
#       - frontend
#       - backend

#   redis:
#     image: redis:alpine
#     ports:
#       - "6379:6379"
#     env_file:
#       - ./backend/.env

# networks:
#   default:
#     external:
#       name: my_network


version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    image: frontend_image:latest
    ports:
      - "3000:80"
    env_file:
      - ./frontend/.env
    deploy:
      replicas: 2
    networks:
      - my_network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: backend_image:latest
    ports:
      - "8000:8000"
    env_file:
      - ./backend/.env
    deploy:
      replicas: 2
    networks:
      - my_network

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    deploy:
      replicas: 1
    networks:
      - my_network

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    env_file:
      - ./backend/.env
    networks:
      - my_network

networks:
  my_network:
    external: true
